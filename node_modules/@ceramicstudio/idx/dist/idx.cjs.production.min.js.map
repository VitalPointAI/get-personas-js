{"version":3,"file":"idx.cjs.production.min.js","sources":["../../../node_modules/regenerator-runtime/runtime.js","../src/doctypes.ts","../src/utils.ts","../src/3box.ts","../src/index.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import type { TileDocument } from '@ceramicnetwork/stream-tile'\n\nexport type TileContent = Record<string, any> | null\nexport type TileDoc = TileDocument<TileContent>\nexport type MutationFunc = (current: TileDoc) => Promise<TileDoc>\n\ntype RejectFunc = (error: Error) => void\n\ntype QueueItem<TileDoc> = {\n  reject: RejectFunc\n  run: (value: TileDoc) => Promise<void>\n}\n\nexport class DoctypeProxy {\n  _getRemote: () => Promise<TileDoc>\n  _getPromise: Promise<TileDoc> | null = null\n  _queue: Array<QueueItem<TileDoc>> = []\n  _promiseValue!: Promise<TileDoc>\n  _deferValue!: { resolve: (value: TileDoc) => any; reject: RejectFunc }\n\n  constructor(getRemote: () => Promise<TileDoc>) {\n    this._getRemote = getRemote\n    this._createValuePromise()\n  }\n\n  _createValuePromise(): void {\n    this._promiseValue = new Promise((resolve, reject) => {\n      this._deferValue = { resolve, reject }\n    })\n  }\n\n  change(mutation: MutationFunc): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const run = async (current: TileDoc): Promise<void> => {\n        try {\n          const next = await mutation(current)\n          resolve()\n          this._next(next)\n        } catch (err) {\n          reject(err)\n          this._next(current)\n        }\n      }\n\n      this._queue.push({ reject, run })\n      if (this._queue.length === 1) {\n        void this._start()\n      }\n    })\n  }\n\n  async changeContent(change: (content: TileContent) => TileContent): Promise<void> {\n    const mutation = async (doc: TileDoc): Promise<TileDoc> => {\n      await doc.update(change(doc.content), doc.metadata)\n      return doc\n    }\n    return await this.change(mutation)\n  }\n\n  async get(): Promise<TileDoc> {\n    return this._queue.length === 0 ? await this._getRemote() : await this._promiseValue\n  }\n\n  async _start(): Promise<void> {\n    try {\n      const value = await this._getRemote()\n      this._next(value)\n    } catch (err) {\n      this._queue.forEach((item) => {\n        item.reject(err)\n      })\n      this._queue = []\n      this._deferValue.reject(err)\n      this._createValuePromise()\n    }\n  }\n\n  _next(value: TileDoc): void {\n    const item = this._queue.shift()\n    if (item == null) {\n      this._end(value)\n    } else {\n      void item.run(value)\n    }\n  }\n\n  _end(value: TileDoc): void {\n    this._deferValue.resolve(value)\n    this._createValuePromise()\n  }\n}\n","import { AccountID } from 'caip'\n\nexport function isCaip10(account: string): boolean {\n  try {\n    AccountID.parse(account)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nconst didRegex = /^did:([A-Za-z0-9]+):([A-Za-z0-9.\\-:_]+)$/\nexport function isDid(did: string): boolean {\n  return didRegex.test(did)\n}\n\nexport function assertDid(did: string): void {\n  if (!isDid(did)) {\n    throw new Error(`Invalid DID: ${did}`)\n  }\n}\n","import type { BasicProfile } from '@ceramicstudio/idx-constants'\nimport fetch from 'cross-fetch'\n\nexport async function loadLegacy3BoxProfile<T = Record<string, any>>(\n  address: string\n): Promise<T | null> {\n  try {\n    const res = await fetch(`https://ipfs.3box.io/profile?address=${address}`)\n    return res.ok ? ((await res.json()) as T) : null\n  } catch (err) {\n    return null\n  }\n}\n\n// Validation for BasicProfile\nconst lengthIndex = <Record<string, number>>{\n  name: 150,\n  description: 420,\n  location: 140, //homeLocation\n  website: 240, // url\n  emoji: 2,\n  employer: 140, //affiliations\n  school: 140, //affiliations\n}\n\nconst isStrAndLen = (obj: Record<string, any>, key: string): boolean => {\n  if (!lengthIndex[key]) return false\n  return typeof obj[key] === 'string' && (obj[key] as string).length <= lengthIndex[key]\n}\n\nexport const transformProfile = (profile: Record<string, any>): BasicProfile => {\n  const transform = {} as BasicProfile\n  let image, background\n  if (isStrAndLen(profile, 'name')) transform.name = profile.name as string\n  if (isStrAndLen(profile, 'description')) transform.description = profile.description as string\n  if (isStrAndLen(profile, 'location')) transform.homeLocation = profile.location as string\n  if (isStrAndLen(profile, 'website')) transform.url = profile.website as string\n  if (isStrAndLen(profile, 'emoji')) transform.emoji = profile.emoji as string\n  if (isStrAndLen(profile, 'employer')) transform.affiliations = [profile.employer]\n  if (isStrAndLen(profile, 'school')) {\n    transform.affiliations = (transform.affiliations || []).concat([profile.school])\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (Array.isArray(profile.image)) image = profile.image[0]?.contentUrl['/'] as string\n  if (image != null && typeof image === 'string') {\n    transform.image = {\n      original: {\n        src: `ipfs://${image}`,\n        mimeType: 'application/octet-stream',\n        width: 170,\n        height: 170,\n      },\n    }\n  }\n  if (Array.isArray(profile.coverPhoto)) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    background = profile.coverPhoto[0]?.contentUrl['/'] as string\n  }\n  if (background != null && typeof background === 'string') {\n    transform.background = {\n      original: {\n        src: `ipfs://${background}`,\n        mimeType: 'application/octet-stream',\n        width: 1000,\n        height: 175,\n      },\n    }\n  }\n  return transform\n}\n\nexport async function getLegacy3BoxProfileAsBasicProfile(\n  address: string\n): Promise<BasicProfile | null> {\n  const profile = await loadLegacy3BoxProfile(address)\n  return profile ? transformProfile(profile) : null\n}\n","import type { CeramicApi } from '@ceramicnetwork/common'\nimport type StreamID from '@ceramicnetwork/streamid'\nimport { TileDocument } from '@ceramicnetwork/stream-tile'\nimport { Caip10Link } from '@ceramicnetwork/stream-caip10-link'\nimport { definitions, schemas } from '@ceramicstudio/idx-constants'\n\nimport { DoctypeProxy, TileDoc, TileContent } from './doctypes'\nimport type { Aliases, DefinitionWithID, Entry, Index, IndexKey } from './types'\nimport { isCaip10, assertDid } from './utils'\n\nexport { getLegacy3BoxProfileAsBasicProfile } from './3box'\nexport * from './types'\nexport * from './utils'\n\nexport interface CreateOptions {\n  pin?: boolean\n}\n\nexport interface IDXOptions {\n  aliases?: Aliases\n  autopin?: boolean\n  ceramic: CeramicApi\n}\n\nexport class IDX {\n  _aliases: Aliases\n  _autopin: boolean\n  _ceramic: CeramicApi\n  _indexProxy: DoctypeProxy\n\n  constructor({ aliases = {}, autopin, ceramic }: IDXOptions) {\n    this._aliases = { ...definitions, ...aliases }\n    this._autopin = autopin !== false\n    this._ceramic = ceramic\n    this._indexProxy = new DoctypeProxy(this._getOwnIDXDoc.bind(this))\n  }\n\n  get authenticated(): boolean {\n    return this._ceramic.did != null\n  }\n\n  get ceramic(): CeramicApi {\n    return this._ceramic\n  }\n\n  get id(): string {\n    if (this._ceramic.did == null) {\n      throw new Error('Ceramic instance is not authenticated')\n    }\n    return this._ceramic.did.id\n  }\n\n  // High-level APIs\n\n  async has(name: string, did?: string): Promise<boolean> {\n    const key = this._toIndexKey(name)\n    const ref = await this._getReference(key, did)\n    return ref != null\n  }\n\n  async get<T = unknown>(name: string, did?: string): Promise<T | null> {\n    const key = this._toIndexKey(name)\n    return await this._getRecord(key, did)\n  }\n\n  async set(\n    name: string,\n    content: Record<string, any>,\n    options?: CreateOptions\n  ): Promise<StreamID> {\n    const key = this._toIndexKey(name)\n    return await this._setRecord(key, content, options)\n  }\n\n  async merge<T extends Record<string, unknown> = Record<string, unknown>>(\n    name: string,\n    content: T,\n    options?: CreateOptions\n  ): Promise<StreamID> {\n    const key = this._toIndexKey(name)\n    const existing = await this._getRecord<T>(key)\n    const newContent = existing ? { ...existing, ...content } : content\n    return await this._setRecord(key, newContent, options)\n  }\n\n  async setAll(\n    contents: Record<string, Record<string, any>>,\n    options?: CreateOptions\n  ): Promise<Index> {\n    const updates = Object.entries(contents).map(async ([name, content]) => {\n      const key = this._toIndexKey(name)\n      const [created, id] = await this._setRecordOnly(key, content, options)\n      return [created, key, id]\n    }) as Array<Promise<[boolean, IndexKey, StreamID]>>\n    const changes = await Promise.all(updates)\n\n    const newReferences = changes.reduce((acc, [created, key, id]) => {\n      if (created) {\n        acc[key] = id.toUrl()\n      }\n      return acc\n    }, {} as Index)\n    await this._setReferences(newReferences)\n\n    return newReferences\n  }\n\n  async setDefaults(\n    contents: Record<string, Record<string, any>>,\n    options?: CreateOptions\n  ): Promise<Index> {\n    const index = (await this.getIndex()) ?? {}\n\n    const updates = Object.entries(contents)\n      .map(([name, content]) => [this._toIndexKey(name), content])\n      // This filter returned the type (string | Record<string, any>)[][]\n      // we need to add a type guard to get the correct type here.\n      .filter(\n        (entry): entry is [string, Record<string, any>] => index[entry[0] as IndexKey] == null\n      )\n      .map(async ([key, content]) => {\n        const definition = await this.getDefinition(key)\n        const id = await this._createRecord(definition, content, options)\n        return { [key]: id.toUrl() }\n      }) as Array<Promise<Index>>\n    const changes = await Promise.all(updates)\n\n    const newReferences = changes.reduce((acc, keyToID) => {\n      return Object.assign(acc, keyToID)\n    }, {} as Index)\n    await this._setReferences(newReferences)\n\n    return newReferences\n  }\n\n  async remove(name: string): Promise<void> {\n    const key = this._toIndexKey(name)\n    await this._removeReference(key)\n  }\n\n  _toIndexKey(name: string): IndexKey {\n    return this._aliases[name] ?? name\n  }\n\n  // Identity Index APIs\n\n  async getIndex(did?: string): Promise<Index | null> {\n    const rootDoc =\n      this.authenticated && (did === this.id || did == null)\n        ? await this._indexProxy.get()\n        : await this._getIDXDoc(did ?? this.id)\n    return rootDoc ? (rootDoc.content as Index) : null\n  }\n\n  iterator(did?: string): AsyncIterableIterator<Entry> {\n    let list: Array<[IndexKey, string]>\n    let cursor = 0\n\n    return {\n      [Symbol.asyncIterator]() {\n        return this\n      },\n      next: async (): Promise<IteratorResult<Entry>> => {\n        if (list == null) {\n          const index = await this.getIndex(did)\n          list = Object.entries(index ?? {})\n        }\n        if (cursor === list.length) {\n          return { done: true, value: null }\n        }\n\n        const [key, id] = list[cursor++]\n        const doc = await this._loadDocument(id)\n        return { done: false, value: { key, id, record: doc.content } }\n      },\n    }\n  }\n\n  async _createIDXDoc(did: string): Promise<TileDoc> {\n    if (isCaip10(did)) {\n      did = await this.caip10ToDid(did)\n    }\n    assertDid(did)\n    return await TileDocument.create<TileContent>(\n      this._ceramic,\n      null,\n      { deterministic: true, controllers: [did], family: 'IDX' },\n      { anchor: false, publish: false }\n    )\n  }\n\n  async _getIDXDoc(did: string): Promise<TileDoc | null> {\n    const doc = await this._createIDXDoc(did)\n    if (doc.metadata.schema == null) {\n      return null\n    }\n    if (doc.metadata.schema !== schemas.IdentityIndex) {\n      throw new Error('Invalid document: schema is not IdentityIndex')\n    }\n    return doc\n  }\n\n  async _getOwnIDXDoc(): Promise<TileDoc> {\n    const doc = await this._createIDXDoc(this.id)\n    if (doc.metadata.schema == null) {\n      // Doc just got created, need to update it with schema\n      await doc.update(null, { schema: schemas.IdentityIndex })\n      if (this._autopin) {\n        await this._ceramic.pin.add(doc.id)\n      }\n    } else if (doc.metadata.schema !== schemas.IdentityIndex) {\n      throw new Error('Invalid document: schema is not IdentityIndex')\n    }\n    return doc\n  }\n\n  // Definition APIs\n\n  async getDefinition(idOrKey: StreamID | IndexKey): Promise<DefinitionWithID> {\n    const doc = await this._loadDocument(idOrKey)\n    if (doc.metadata.schema !== schemas.Definition) {\n      throw new Error('Invalid document: schema is not Definition')\n    }\n    return { ...doc.content, id: doc.id } as DefinitionWithID\n  }\n\n  // Record APIs\n\n  async getRecordID(key: IndexKey, did?: string): Promise<string | null> {\n    return await this._getReference(key, did)\n  }\n\n  async getRecordDocument(key: IndexKey, did?: string): Promise<TileDoc | null> {\n    const id = await this.getRecordID(key, did)\n    if (id == null) {\n      return null\n    }\n    return (await this._loadDocument(id)) ?? null\n  }\n\n  async _getRecord<T = unknown>(key: IndexKey, did?: string): Promise<T | null> {\n    const doc = await this.getRecordDocument(key, did)\n    return doc ? (doc.content as T) : null\n  }\n\n  async _setRecord(\n    key: IndexKey,\n    content: Record<string, any>,\n    options?: CreateOptions\n  ): Promise<StreamID> {\n    const [created, id] = await this._setRecordOnly(key, content, options)\n    if (created) {\n      await this._setReference(key, id)\n    }\n    return id\n  }\n\n  async _setRecordOnly(\n    key: IndexKey,\n    content: Record<string, any>,\n    { pin }: CreateOptions = {}\n  ): Promise<[boolean, StreamID]> {\n    const existing = await this._getReference(key, this.id)\n    if (existing == null) {\n      const definition = await this.getDefinition(key)\n      const ref = await this._createRecord(definition, content, { pin })\n      return [true, ref]\n    } else {\n      const doc = await this._loadDocument(existing)\n      await doc.update(content)\n      return [false, doc.id]\n    }\n  }\n\n  _loadDocument(id: StreamID | string): Promise<TileDoc> {\n    return this._ceramic.loadStream<TileDoc>(id)\n  }\n\n  async _createRecord(\n    definition: DefinitionWithID,\n    content: Record<string, any>,\n    { pin }: CreateOptions = {}\n  ): Promise<StreamID> {\n    // Doc must first be created in a deterministic way\n    const doc = await TileDocument.create<TileContent>(\n      this._ceramic,\n      null,\n      { deterministic: true, controllers: [this.id], family: definition.id.toString() },\n      { anchor: false, publish: false }\n    )\n    // Then be updated with content and schema\n    const updated = doc.update(content, { schema: definition.schema })\n    if (pin ?? this._autopin) {\n      await Promise.all([updated, this._ceramic.pin.add(doc.id)])\n    } else {\n      await updated\n    }\n    return doc.id\n  }\n\n  // References APIs\n\n  async _getReference(key: IndexKey, did?: string): Promise<string | null> {\n    const index = await this.getIndex(did ?? this.id)\n    return index?.[key] ?? null\n  }\n\n  async _setReference(key: IndexKey, id: StreamID): Promise<void> {\n    await this._indexProxy.changeContent((index) => {\n      return { ...index, [key]: id.toUrl() }\n    })\n  }\n\n  async _setReferences(references: Index): Promise<void> {\n    if (Object.keys(references).length !== 0) {\n      await this._indexProxy.changeContent((index) => {\n        return { ...index, ...references }\n      })\n    }\n  }\n\n  async _removeReference(key: IndexKey): Promise<void> {\n    await this._indexProxy.changeContent((index) => {\n      if (index) delete index[key]\n      return index\n    })\n  }\n\n  async caip10ToDid(accountId: string): Promise<string> {\n    const link = await Caip10Link.fromAccount(this._ceramic, accountId)\n    if (link.did == null) {\n      throw new Error(`No DID found for ${accountId}`)\n    }\n    return link.did\n  }\n}\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","DoctypeProxy","getRemote","_getRemote","_createValuePromise","_promiseValue","_this","_deferValue","change","mutation","run","current","_this2","_next","_queue","_start","changeContent","doc","update","content","metadata","get","item","shift","_end","isCaip10","account","AccountID","parse","e","didRegex","isDid","did","test","assertDid","loadLegacy3BoxProfile","address","fetch","res","ok","json","lengthIndex","description","location","website","emoji","employer","school","isStrAndLen","transformProfile","profile","image","background","transform","homeLocation","url","affiliations","concat","Array","isArray","_profile$image$","contentUrl","original","src","mimeType","width","height","coverPhoto","_profile$coverPhoto$","aliases","autopin","ceramic","_aliases","definitions","_autopin","_ceramic","_indexProxy","_getOwnIDXDoc","bind","has","_toIndexKey","_getReference","_getRecord","set","options","_setRecord","merge","newContent","existing","setAll","contents","updates","entries","map","_setRecordOnly","all","newReferences","reduce","acc","toUrl","_setReferences","setDefaults","getIndex","index","filter","getDefinition","definition","_createRecord","keyToID","assign","remove","_removeReference","authenticated","id","_getIDXDoc","rootDoc","list","cursor","_this3","_loadDocument","_createIDXDoc","caip10ToDid","TileDocument","deterministic","controllers","family","anchor","publish","schema","schemas","IdentityIndex","pin","add","idOrKey","Definition","getRecordID","getRecordDocument","_setReference","loadStream","updated","references","accountId","Caip10Link","fromAccount","link"],"mappings":"44BAOIA,EAAW,SAAUC,OAGnBC,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,yBAEtCC,EAAOC,EAAKC,EAAKC,UACxBf,OAAOgB,eAAeH,EAAKC,EAAK,CAC9BC,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAELN,EAAIC,OAIXF,EAAO,GAAI,IACX,MAAOQ,GACPR,EAAS,SAASC,EAAKC,EAAKC,UACnBF,EAAIC,GAAOC,YAIbM,EAAKC,EAASC,EAASC,EAAMC,OAGhCC,EAAY1B,OAAO2B,QADFJ,GAAWA,EAAQtB,qBAAqB2B,EAAYL,EAAUK,GACtC3B,WACzC4B,EAAU,IAAIC,EAAQL,GAAe,WAIzCC,EAAUK,iBAsMcT,EAASE,EAAMK,OACnCG,EA/KuB,wBAiLpB,SAAgBC,EAAQC,MA/KT,cAgLhBF,QACI,IAAIG,MAAM,mCAhLE,cAmLhBH,EAA6B,IAChB,UAAXC,QACIC,QAyQL,CAAEnB,WAzfPqB,EAyfyBC,MAAM,OAjQ/BR,EAAQI,OAASA,EACjBJ,EAAQK,IAAMA,IAED,KACPI,EAAWT,EAAQS,YACnBA,EAAU,KACRC,EAAiBC,EAAoBF,EAAUT,MAC/CU,EAAgB,IACdA,IAAmBE,EAAkB,gBAClCF,MAIY,SAAnBV,EAAQI,OAGVJ,EAAQa,KAAOb,EAAQc,MAAQd,EAAQK,SAElC,GAAuB,UAAnBL,EAAQI,OAAoB,IAlNhB,mBAmNjBD,QACFA,EAjNc,YAkNRH,EAAQK,IAGhBL,EAAQe,kBAAkBf,EAAQK,SAEN,WAAnBL,EAAQI,QACjBJ,EAAQgB,OAAO,SAAUhB,EAAQK,KAGnCF,EA5NkB,gBA8Ndc,EAASC,EAASzB,EAASE,EAAMK,MACjB,WAAhBiB,EAAOE,KAAmB,IAG5BhB,EAAQH,EAAQQ,KAjOA,YAFK,iBAuOjBS,EAAOZ,MAAQO,iBAIZ,CACL1B,MAAO+B,EAAOZ,IACdG,KAAMR,EAAQQ,MAGS,UAAhBS,EAAOE,OAChBhB,EA/OgB,YAkPhBH,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,OA9QPe,CAAiB3B,EAASE,EAAMK,GAE7CH,WAcAqB,EAASG,EAAIrC,EAAKqB,aAEhB,CAAEc,KAAM,SAAUd,IAAKgB,EAAGC,KAAKtC,EAAKqB,IAC3C,MAAOd,SACA,CAAE4B,KAAM,QAASd,IAAKd,IAhBjCtB,EAAQuB,KAAOA,MA2BXoB,EAAmB,YAMdb,cACAwB,cACAC,SAILC,EAAoB,GACxBA,EAAkBhD,GAAkB,kBAC3BiD,UAGLC,EAAWxD,OAAOyD,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4B3D,GAC5BG,EAAOiD,KAAKO,EAAyBpD,KAGvCgD,EAAoBI,OAGlBE,EAAKP,EAA2BpD,UAClC2B,EAAU3B,UAAYD,OAAO2B,OAAO2B,YAW7BO,EAAsB5D,IAC5B,OAAQ,QAAS,UAAU6D,SAAQ,SAAS7B,GAC3CrB,EAAOX,EAAWgC,GAAQ,SAASC,UAC1BqB,KAAKxB,QAAQE,EAAQC,kBAkCzB6B,EAAcrC,EAAWsC,OAgC5BC,OAgCClC,iBA9BYE,EAAQC,YACdgC,WACA,IAAIF,GAAY,SAASG,EAASC,aAnCpCC,EAAOpC,EAAQC,EAAKiC,EAASC,OAChCtB,EAASC,EAASrB,EAAUO,GAASP,EAAWQ,MAChC,UAAhBY,EAAOE,KAEJ,KACDsB,EAASxB,EAAOZ,IAChBnB,EAAQuD,EAAOvD,aACfA,GACiB,iBAAVA,GACPb,EAAOiD,KAAKpC,EAAO,WACdiD,EAAYG,QAAQpD,EAAMwD,SAASC,MAAK,SAASzD,GACtDsD,EAAO,OAAQtD,EAAOoD,EAASC,MAC9B,SAAShD,GACViD,EAAO,QAASjD,EAAK+C,EAASC,MAI3BJ,EAAYG,QAAQpD,GAAOyD,MAAK,SAASC,GAI9CH,EAAOvD,MAAQ0D,EACfN,EAAQG,MACP,SAASI,UAGHL,EAAO,QAASK,EAAOP,EAASC,MAvBzCA,EAAOtB,EAAOZ,KAiCZmC,CAAOpC,EAAQC,EAAKiC,EAASC,aAI1BH,EAaLA,EAAkBA,EAAgBO,KAChCN,EAGAA,GACEA,cAkHD1B,EAAoBF,EAAUT,OACjCI,EAASK,EAAS/B,SAASsB,EAAQI,gBAzTrCG,IA0TEH,EAAsB,IAGxBJ,EAAQS,SAAW,KAEI,UAAnBT,EAAQI,OAAoB,IAE1BK,EAAS/B,SAAT,SAGFsB,EAAQI,OAAS,SACjBJ,EAAQK,SArUZE,EAsUII,EAAoBF,EAAUT,GAEP,UAAnBA,EAAQI,eAGHQ,EAIXZ,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAChB,yDAGGlC,MAGLK,EAASC,EAASd,EAAQK,EAAS/B,SAAUsB,EAAQK,QAErC,UAAhBY,EAAOE,YACTnB,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,IACrBL,EAAQS,SAAW,KACZG,MAGLmC,EAAO9B,EAAOZ,WAEZ0C,EAOFA,EAAKvC,MAGPR,EAAQS,EAASuC,YAAcD,EAAK7D,MAGpCc,EAAQiD,KAAOxC,EAASyC,QAQD,WAAnBlD,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQK,SAzXVE,GAmYFP,EAAQS,SAAW,KACZG,GANEmC,GA3BP/C,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAAU,oCAC5B9C,EAAQS,SAAW,KACZG,YAoDFuC,EAAaC,OAChBC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,SAGnBM,WAAWC,KAAKN,YAGdO,EAAcP,OACjBpC,EAASoC,EAAMQ,YAAc,GACjC5C,EAAOE,KAAO,gBACPF,EAAOZ,IACdgD,EAAMQ,WAAa5C,WAGZhB,EAAQL,QAIV8D,WAAa,CAAC,CAAEJ,OAAQ,SAC7B1D,EAAYqC,QAAQkB,EAAczB,WAC7BoC,OAAM,YA8BJhC,EAAOiC,MACVA,EAAU,KACRC,EAAiBD,EAAStF,MAC1BuF,SACKA,EAAe1C,KAAKyC,MAGA,mBAAlBA,EAASd,YACXc,MAGJE,MAAMF,EAASG,QAAS,KACvBC,GAAK,EAAGlB,EAAO,SAASA,WACjBkB,EAAIJ,EAASG,WAChB7F,EAAOiD,KAAKyC,EAAUI,UACxBlB,EAAK/D,MAAQ6E,EAASI,GACtBlB,EAAKzC,MAAO,EACLyC,SAIXA,EAAK/D,WAzeTqB,EA0eI0C,EAAKzC,MAAO,EAELyC,UAGFA,EAAKA,KAAOA,SAKhB,CAAEA,KAAMmB,YAIRA,UACA,CAAElF,WAzfPqB,EAyfyBC,MAAM,UA7ZnCe,EAAkBnD,UAAY2D,EAAGsC,YAAc7C,EAC/CA,EAA2B6C,YAAc9C,EACzCA,EAAkB+C,YAAcvF,EAC9ByC,EACA3C,EACA,qBAaFZ,EAAQsG,oBAAsB,SAASC,OACjCC,EAAyB,mBAAXD,GAAyBA,EAAOH,oBAC3CI,IACHA,IAASlD,GAG2B,uBAAnCkD,EAAKH,aAAeG,EAAKC,QAIhCzG,EAAQ0G,KAAO,SAASH,UAClBrG,OAAOyG,eACTzG,OAAOyG,eAAeJ,EAAQhD,IAE9BgD,EAAOK,UAAYrD,EACnBzC,EAAOyF,EAAQ3F,EAAmB,sBAEpC2F,EAAOpG,UAAYD,OAAO2B,OAAOiC,GAC1ByC,GAOTvG,EAAQ6G,MAAQ,SAASzE,SAChB,CAAEqC,QAASrC,IAsEpB2B,EAAsBE,EAAc9D,WACpC8D,EAAc9D,UAAUO,GAAuB,kBACtC+C,MAETzD,EAAQiE,cAAgBA,EAKxBjE,EAAQ8G,MAAQ,SAAStF,EAASC,EAASC,EAAMC,EAAauC,QACxC,IAAhBA,IAAwBA,EAAc6C,aAEtCC,EAAO,IAAI/C,EACb1C,EAAKC,EAASC,EAASC,EAAMC,GAC7BuC,UAGKlE,EAAQsG,oBAAoB7E,GAC/BuF,EACAA,EAAKhC,OAAON,MAAK,SAASF,UACjBA,EAAOjC,KAAOiC,EAAOvD,MAAQ+F,EAAKhC,WAuKjDjB,EAAsBD,GAEtBhD,EAAOgD,EAAIlD,EAAmB,aAO9BkD,EAAGtD,GAAkB,kBACZiD,MAGTK,EAAGmD,SAAW,iBACL,sBAkCTjH,EAAQkH,KAAO,SAASC,OAClBD,EAAO,OACN,IAAIlG,KAAOmG,EACdD,EAAKxB,KAAK1E,UAEZkG,EAAKE,UAIE,SAASpC,SACPkC,EAAKjB,QAAQ,KACdjF,EAAMkG,EAAKG,SACXrG,KAAOmG,SACTnC,EAAK/D,MAAQD,EACbgE,EAAKzC,MAAO,EACLyC,SAOXA,EAAKzC,MAAO,EACLyC,IAsCXhF,EAAQ6D,OAASA,EAMjB7B,EAAQ7B,UAAY,CAClBiG,YAAapE,EAEb6D,MAAO,SAASyB,WACTC,KAAO,OACPvC,KAAO,OAGPpC,KAAOa,KAAKZ,WApgBjBP,OAqgBKC,MAAO,OACPC,SAAW,UAEXL,OAAS,YACTC,SAzgBLE,OA2gBKmD,WAAWzB,QAAQ2B,IAEnB2B,MACE,IAAIb,KAAQhD,KAEQ,MAAnBgD,EAAKe,OAAO,IACZpH,EAAOiD,KAAKI,KAAMgD,KACjBT,OAAOS,EAAKgB,MAAM,WAChBhB,QAnhBXnE,IAyhBFoF,KAAM,gBACCnF,MAAO,MAGRoF,EADYlE,KAAKgC,WAAW,GACLG,cACH,UAApB+B,EAAWzE,WACPyE,EAAWvF,WAGZqB,KAAKmE,MAGd9E,kBAAmB,SAAS+E,MACtBpE,KAAKlB,WACDsF,MAGJ9F,EAAU0B,cACLqE,EAAOC,EAAKC,UACnBhF,EAAOE,KAAO,QACdF,EAAOZ,IAAMyF,EACb9F,EAAQiD,KAAO+C,EAEXC,IAGFjG,EAAQI,OAAS,OACjBJ,EAAQK,SApjBZE,KAujBY0F,MAGP,IAAI9B,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,KAChDd,EAAQ3B,KAAKgC,WAAWS,GACxBlD,EAASoC,EAAMQ,cAEE,SAAjBR,EAAMC,cAIDyC,EAAO,UAGZ1C,EAAMC,QAAU5B,KAAK8D,KAAM,KACzBU,EAAW7H,EAAOiD,KAAK+B,EAAO,YAC9B8C,EAAa9H,EAAOiD,KAAK+B,EAAO,iBAEhC6C,GAAYC,EAAY,IACtBzE,KAAK8D,KAAOnC,EAAME,gBACbwC,EAAO1C,EAAME,UAAU,GACzB,GAAI7B,KAAK8D,KAAOnC,EAAMG,kBACpBuC,EAAO1C,EAAMG,iBAGjB,GAAI0C,MACLxE,KAAK8D,KAAOnC,EAAME,gBACbwC,EAAO1C,EAAME,UAAU,OAG3B,CAAA,IAAI4C,QAMH,IAAI7F,MAAM,6CALZoB,KAAK8D,KAAOnC,EAAMG,kBACbuC,EAAO1C,EAAMG,gBAU9BxC,OAAQ,SAASG,EAAMd,OAChB,IAAI8D,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,KAChDd,EAAQ3B,KAAKgC,WAAWS,MACxBd,EAAMC,QAAU5B,KAAK8D,MACrBnH,EAAOiD,KAAK+B,EAAO,eACnB3B,KAAK8D,KAAOnC,EAAMG,WAAY,KAC5B4C,EAAe/C,SAKnB+C,IACU,UAATjF,GACS,aAATA,IACDiF,EAAa9C,QAAUjD,GACvBA,GAAO+F,EAAa5C,aAGtB4C,EAAe,UAGbnF,EAASmF,EAAeA,EAAavC,WAAa,UACtD5C,EAAOE,KAAOA,EACdF,EAAOZ,IAAMA,EAET+F,QACGhG,OAAS,YACT6C,KAAOmD,EAAa5C,WAClB5C,GAGFc,KAAK2E,SAASpF,IAGvBoF,SAAU,SAASpF,EAAQwC,MACL,UAAhBxC,EAAOE,WACHF,EAAOZ,UAGK,UAAhBY,EAAOE,MACS,aAAhBF,EAAOE,UACJ8B,KAAOhC,EAAOZ,IACM,WAAhBY,EAAOE,WACX0E,KAAOnE,KAAKrB,IAAMY,EAAOZ,SACzBD,OAAS,cACT6C,KAAO,OACa,WAAhBhC,EAAOE,MAAqBsC,SAChCR,KAAOQ,GAGP7C,GAGT0F,OAAQ,SAAS9C,OACV,IAAIW,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,KAChDd,EAAQ3B,KAAKgC,WAAWS,MACxBd,EAAMG,aAAeA,cAClB6C,SAAShD,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACPzC,UAKJ,SAAS0C,OACX,IAAIa,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,KAChDd,EAAQ3B,KAAKgC,WAAWS,MACxBd,EAAMC,SAAWA,EAAQ,KACvBrC,EAASoC,EAAMQ,cACC,UAAhB5C,EAAOE,KAAkB,KACvBoF,EAAStF,EAAOZ,IACpBuD,EAAcP,UAETkD,SAML,IAAIjG,MAAM,0BAGlBkG,cAAe,SAASzC,EAAUf,EAAYE,eACvCzC,SAAW,CACd/B,SAAUoD,EAAOiC,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhBxB,KAAKtB,cAGFC,SA7rBPE,GAgsBOK,IAQJ3C,EA7sBM,CAotBgBwI,EAAOxI,aAIpCyI,mBAAqB1I,EACrB,MAAO2I,GAUPC,SAAS,IAAK,yBAAdA,CAAwC5I,OC7tB7B6I,wBAOCC,oBAL2B,iBACH,QAK7BC,WAAaD,OACbE,iDAGPA,oBAAA,2BACOC,cAAgB,IAAIjC,SAAQ,SAAC1C,EAASC,GACzC2E,EAAKC,YAAc,CAAE7E,QAAAA,EAASC,OAAAA,SAIlC6E,OAAA,SAAOC,qBACE,IAAIrC,SAAQ,SAAC1C,EAASC,OACrB+E,6BAAM,WAAOC,iGAEIF,EAASE,UAAtBtE,SACNX,IACAkF,EAAKC,MAAMxE,mDAEXV,QACAiF,EAAKC,MAAMF,kHAIfC,EAAKE,OAAO/D,KAAK,CAAEpB,OAAAA,EAAQ+E,IAAAA,IACA,IAAvBE,EAAKE,OAAOxD,QACTsD,EAAKG,eAKVC,yCAAN,WAAoBR,+EACZC,6BAAW,WAAOQ,kFAChBA,EAAIC,OAAOV,EAAOS,EAAIE,SAAUF,EAAIG,0CACnCH,6GAEInG,KAAK0F,OAAOC,mJAGrBY,+BAAN,+EACgC,IAAvBvG,KAAKgG,OAAOxD,uCAAqBxC,KAAKqF,sEAAqBrF,KAAKuF,+KAGnEU,kCAAN,qGAEwBjG,KAAKqF,yBACpBU,mEAEAC,OAAOzF,SAAQ,SAACiG,GACnBA,EAAK3F,qBAEFmF,OAAS,QACTP,YAAY5E,kBACZyE,sIAITS,MAAA,SAAMvI,OACEgJ,EAAOxG,KAAKgG,OAAOS,QACb,MAARD,OACGE,KAAKlJ,GAELgJ,EAAKZ,IAAIpI,MAIlBkJ,KAAA,SAAKlJ,QACEiI,YAAY7E,QAAQpD,QACpB8H,qCCtFOqB,EAASC,cAErBC,YAAUC,MAAMF,IACT,EACP,MAAOG,UACA,GAIX,IAAMC,EAAW,oDACDC,EAAMC,UACbF,EAASG,KAAKD,YAGPE,EAAUF,OACnBD,EAAMC,SACH,IAAItI,sBAAsBsI,YCfdG,oEAAf,WACLC,iGAGoBC,0CAA8CD,eAA1DE,UACKC,oCAAaD,EAAIE,uDAAgB,uGAErC,uFAKX,IAAMC,EAAsC,CAC1C3E,KAAM,IACN4E,YAAa,IACbC,SAAU,IACVC,QAAS,IACTC,MAAO,EACPC,SAAU,IACVC,OAAQ,KAGJC,EAAc,SAAC5K,EAA0BC,WACxCoK,EAAYpK,IACU,iBAAbD,EAAIC,IAAsBD,EAAIC,GAAgBiF,QAAUmF,EAAYpK,IAGvE4K,EAAmB,SAACC,SAE3BC,EAAOC,IADLC,EAAY,UAEdL,EAAYE,EAAS,UAASG,EAAUvF,KAAOoF,EAAQpF,MACvDkF,EAAYE,EAAS,iBAAgBG,EAAUX,YAAcQ,EAAQR,aACrEM,EAAYE,EAAS,cAAaG,EAAUC,aAAeJ,EAAQP,UACnEK,EAAYE,EAAS,aAAYG,EAAUE,IAAML,EAAQN,SACzDI,EAAYE,EAAS,WAAUG,EAAUR,MAAQK,EAAQL,OACzDG,EAAYE,EAAS,cAAaG,EAAUG,aAAe,CAACN,EAAQJ,WACpEE,EAAYE,EAAS,YACvBG,EAAUG,cAAgBH,EAAUG,cAAgB,IAAIC,OAAO,CAACP,EAAQH,UAGtEW,MAAMC,QAAQT,EAAQC,SAAQA,WAAQD,EAAQC,MAAM,WAAdS,EAAkBC,WAAW,MAC1D,MAATV,GAAkC,iBAAVA,IAC1BE,EAAUF,MAAQ,CAChBW,SAAU,CACRC,cAAeZ,EACfa,SAAU,2BACVC,MAAO,IACPC,OAAQ,OAIVR,MAAMC,QAAQT,EAAQiB,cAExBf,WAAaF,EAAQiB,WAAW,WAAnBC,EAAuBP,WAAW,MAE/B,MAAdT,GAA4C,iBAAfA,IAC/BC,EAAUD,WAAa,CACrBU,SAAU,CACRC,cAAeX,EACfY,SAAU,2BACVC,MAAO,IACPC,OAAQ,OAIPb,mCAGF,WACLjB,wFAEsBD,EAAsBC,oCAAtCc,UACWD,EAAiBC,GAAW,qHC7C/BmB,QAAcC,IAAAA,QAASC,IAAAA,aAC9BC,cAAgBC,yBADC,WAEjBC,UAAuB,IAAZJ,OACXK,SAAWJ,OACXK,YAAc,IAAI3E,EAAanF,KAAK+J,cAAcC,KAAKhK,oCAoBxDiK,+BAAN,WAAUjH,EAAckE,+EAChB3J,EAAMyC,KAAKkK,YAAYlH,YACXhD,KAAKmK,cAAc5M,EAAK2J,mCAC5B,wHAGVX,+BAAN,WAAuBvD,EAAckE,+EAC7B3J,EAAMyC,KAAKkK,YAAYlH,YAChBhD,KAAKoK,WAAW7M,EAAK2J,qJAG9BmD,+BAAN,WACErH,EACAqD,EACAiE,+EAEM/M,EAAMyC,KAAKkK,YAAYlH,YAChBhD,KAAKuK,WAAWhN,EAAK8I,EAASiE,uJAGvCE,iCAAN,WACExH,EACAqD,EACAiE,mFAEM/M,EAAMyC,KAAKkK,YAAYlH,YACNhD,KAAKoK,WAAc7M,iBACpCkN,GADAC,eAC6BA,EAAarE,GAAYA,WAC/CrG,KAAKuK,WAAWhN,EAAKkN,EAAYH,uJAG1CK,kCAAN,WACEC,EACAN,wFAEMO,EAAUpO,OAAOqO,QAAQF,GAAUG,+BAAI,8FAAc1E,OACnD9I,EAAMiI,EAAK0E,2BACW1E,EAAKwF,eAAezN,EAAK8I,EAASiE,mCACvD,eAAU/M,oHAEG+F,QAAQ2H,IAAIJ,iBAE5BK,SAAwBC,QAAO,SAACC,mBAElCA,aAAcC,SAETD,IACN,aACGpL,KAAKsL,eAAeJ,mCAEnBA,6GAGHK,uCAAN,WACEX,EACAN,qGAEqBtK,KAAKwL,gGAAe,iBAAnCC,OAEAZ,EAAUpO,OAAOqO,QAAQF,GAC5BG,KAAI,gBAAQ1E,aAAa,CAACP,EAAKoE,kBAAmB7D,MAGlDqF,QACC,SAAC/J,UAAiF,MAA/B8J,EAAM9J,EAAM,OAEhEoJ,+BAAI,gGAAQxN,OAAK8I,gBACSP,EAAK6F,cAAcpO,iBAAtCqO,kBACW9F,EAAK+F,cAAcD,EAAYvF,EAASiE,2CAC/C/M,UAAS8N,wHAED/H,QAAQ2H,IAAIJ,kBAE5BK,SAAwBC,QAAO,SAACC,EAAKU,UAClCrP,OAAOsP,OAAOX,EAAKU,KACzB,cACG9L,KAAKsL,eAAeJ,oCAEnBA,8GAGHc,kCAAN,WAAahJ,+EACLzF,EAAMyC,KAAKkK,YAAYlH,YACvBhD,KAAKiM,iBAAiB1O,2GAG9B2M,YAAA,SAAYlH,yBACHhD,KAAK0J,SAAS1G,MAASA,KAK1BwI,oCAAN,WAAetE,4EAEXlH,KAAKkM,eAAkBhF,IAAQlH,KAAKmM,IAAa,MAAPjF,kCAChClH,KAAK8J,YAAYvD,+DACjBvG,KAAKoM,iBAAWlF,EAAAA,EAAOlH,KAAKmM,wDAHlCE,QAIYA,EAAQhG,QAAoB,+GAGhDrJ,SAAA,SAASkK,SACHoF,WACAC,EAAS,eAGVzP,OAAOI,iCACC8C,QAETuB,kBAAM,2FACQ,MAAR+K,kCACkBE,EAAKhB,SAAStE,UAA5BuE,SACNa,EAAO7P,OAAOqO,cAAQW,EAAAA,EAAS,cAE7Bc,IAAWD,EAAK9J,gDACX,CAAE1D,MAAM,EAAMtB,MAAO,uBAGZ8O,EAAKC,KAAhBhP,OAAK4O,iBACMK,EAAKC,cAAcN,oCAC9B,CAAErN,MAAM,EAAOtB,MAAO,CAAED,IAAAA,EAAK4O,GAAAA,EAAI5M,cAAY8G,wGAKpDqG,yCAAN,WAAoBxF,sEACdP,EAASO,mCACClH,KAAK2M,YAAYzF,UAA7BA,uBAEFE,EAAUF,YACG0F,eAAaxO,OACxB4B,KAAK6J,SACL,KACA,CAAEgD,eAAe,EAAMC,YAAa,CAAC5F,GAAM6F,OAAQ,OACnD,CAAEC,QAAQ,EAAOC,SAAS,oJAIxBb,sCAAN,WAAiBlF,wFACGlH,KAAK0M,cAAcxF,aACV,OADrBf,UACEG,SAAS4G,gDACR,gBAEL/G,EAAIG,SAAS4G,SAAWC,UAAQC,oCAC5B,IAAIxO,MAAM,iFAEXuH,2GAGH4D,yCAAN,kGACoB/J,KAAK0M,cAAc1M,KAAKmM,cACf,OADrBhG,UACEG,SAAS4G,wCAET/G,EAAIC,OAAO,KAAM,CAAE8G,OAAQC,UAAQC,2BACrCpN,KAAK4J,yCACD5J,KAAK6J,SAASwD,IAAIC,IAAInH,EAAIgG,sCAEzBhG,EAAIG,SAAS4G,SAAWC,UAAQC,qCACnC,IAAIxO,MAAM,kFAEXuH,2GAKHwF,yCAAN,WAAoB4B,wFACAvN,KAAKyM,cAAcc,cAA/BpH,UACEG,SAAS4G,SAAWC,UAAQK,iCAC5B,IAAI5O,MAAM,mFAENuH,EAAIE,SAAS8F,GAAIhG,EAAIgG,8GAK7BsB,uCAAN,WAAkBlQ,EAAe2J,kFAClBlH,KAAKmK,cAAc5M,EAAK2J,qJAGjCwG,6CAAN,WAAwBnQ,EAAe2J,0FACpBlH,KAAKyN,YAAYlQ,EAAK2J,aAC7B,OADJiF,mDAEG,6BAEKnM,KAAKyM,cAAcN,2FAAQ,uJAGrC/B,sCAAN,WAA8B7M,EAAe2J,wFACzBlH,KAAK0N,kBAAkBnQ,EAAK2J,oCAAxCf,UACQA,EAAIE,QAAgB,gHAG9BkE,sCAAN,WACEhN,EACA8I,EACAiE,0FAE4BtK,KAAKgL,eAAezN,EAAK8I,EAASiE,aAA9C6B,sDAERnM,KAAK2N,cAAcpQ,EAAK4O,mCAEzBA,+GAGHnB,0CAAN,WACEzN,EACA8I,uFACEgH,cAAuB,MAAvBA,aAEqBrN,KAAKmK,cAAc5M,EAAKyC,KAAKmM,cACpC,OADVzB,2CAEqB1K,KAAK2L,cAAcpO,iBAAtCqO,mBACY5L,KAAK6L,cAAcD,EAAYvF,EAAS,CAAEgH,IAAAA,qCACrD,EAAC,oCAEUrN,KAAKyM,cAAc/B,kBAA/BvE,mBACAA,EAAIC,OAAOC,oCACV,EAAC,EAAOF,EAAIgG,kHAIvBM,cAAA,SAAcN,UACLnM,KAAK6J,SAAS+D,WAAoBzB,MAGrCN,yCAAN,WACED,EACAvF,qFACEgH,cAAuB,MAAvBA,aAGgBT,eAAaxO,OAC7B4B,KAAK6J,SACL,KACA,CAAEgD,eAAe,EAAMC,YAAa,CAAC9M,KAAKmM,IAAKY,OAAQnB,EAAWO,GAAG3I,YACrE,CAAEwJ,QAAQ,EAAOC,SAAS,cAGtBY,GAPA1H,UAOcC,OAAOC,EAAS,CAAE6G,OAAQtB,EAAWsB,iBACrDG,EAAAA,EAAOrN,KAAK4J,2CACRtG,QAAQ2H,IAAI,CAAC4C,EAAS7N,KAAK6J,SAASwD,IAAIC,IAAInH,EAAIgG,sDAEhD0B,mCAED1H,EAAIgG,iHAKPhC,yCAAN,WAAoB5M,EAAe2J,0FACblH,KAAKwL,eAAStE,EAAAA,EAAOlH,KAAKmM,oDAAxCV,iBACCA,EAAQlO,MAAQ,gHAGnBoQ,yCAAN,WAAoBpQ,EAAe4O,kFAC3BnM,KAAK8J,YAAY5D,eAAc,SAACuF,qBACxBA,UAAQlO,GAAM4O,EAAGd,yHAI3BC,0CAAN,WAAqBwC,qEACoB,IAAnCrR,OAAOgH,KAAKqK,GAAYtL,uCACpBxC,KAAK8J,YAAY5D,eAAc,SAACuF,eACxBA,EAAUqC,8GAKtB7B,4CAAN,WAAuB1O,kFACfyC,KAAK8J,YAAY5D,eAAc,SAACuF,UAChCA,UAAcA,EAAMlO,GACjBkO,6GAILkB,uCAAN,WAAkBoB,wFACGC,aAAWC,YAAYjO,KAAK6J,SAAUkE,aACzC,OADVG,UACGhH,0BACD,IAAItI,0BAA0BmP,mCAE/BG,EAAKhH,wIAxSd,kBAC8B,MAArBlH,KAAK6J,SAAS3C,yBAGvB,kBACSlH,KAAK6J,yBAGd,cAC2B,MAArB7J,KAAK6J,SAAS3C,UACV,IAAItI,MAAM,gDAEXoB,KAAK6J,SAAS3C,IAAIiF"}