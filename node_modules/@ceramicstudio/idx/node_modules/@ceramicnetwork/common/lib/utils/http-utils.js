"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fetchJson = void 0;
const cross_fetch_1 = __importDefault(require("cross-fetch"));
const abort_controller_1 = __importDefault(require("abort-controller"));
const DEFAULT_FETCH_TIMEOUT = 60 * 1000 * 3;
async function fetchJson(url, opts = {}) {
    if (opts.body) {
        Object.assign(opts, {
            body: JSON.stringify(opts.body),
            headers: { 'Content-Type': 'application/json' },
        });
    }
    const timeoutLength = opts.timeout || DEFAULT_FETCH_TIMEOUT;
    const controller = new abort_controller_1.default();
    const timeout = setTimeout(() => {
        controller.abort();
    }, timeoutLength);
    Object.assign(opts, {
        signal: controller.signal,
    });
    const res = await cross_fetch_1.default(url, opts)
        .catch((err) => {
        if (err.name == 'AbortError') {
            throw new Error(`Http request timed out after ${timeoutLength} ms`);
        }
        throw err;
    })
        .finally(() => timeout && clearTimeout(timeout));
    if (!res.ok) {
        const text = await res.text();
        throw new Error(`HTTP request to '${url}' failed with status '${res.statusText}': ${text}`);
    }
    return res.json();
}
exports.fetchJson = fetchJson;
//# sourceMappingURL=http-utils.js.map