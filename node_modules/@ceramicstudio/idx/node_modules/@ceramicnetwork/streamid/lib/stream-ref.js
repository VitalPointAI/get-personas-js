"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StreamRef = void 0;
const stream_id_1 = require("./stream-id");
const commit_id_1 = require("./commit-id");
function tryCatch(f) {
    try {
        return f();
    }
    catch (_a) {
        return null;
    }
}
var StreamRef;
(function (StreamRef) {
    function from(input) {
        if (stream_id_1.StreamID.isInstance(input)) {
            return input;
        }
        else if (commit_id_1.CommitID.isInstance(input)) {
            return input;
        }
        else if (input instanceof Uint8Array) {
            const commitId = commit_id_1.CommitID.fromBytesNoThrow(input);
            if (commitId instanceof Error) {
                return stream_id_1.StreamID.fromBytes(input);
            }
            return commitId;
        }
        else if (typeof input === 'string') {
            const commitId = commit_id_1.CommitID.fromStringNoThrow(input);
            if (commitId instanceof Error) {
                return stream_id_1.StreamID.fromString(input);
            }
            return commitId;
        }
        else {
            throw new Error(`Can not build CommitID or StreamID`);
        }
    }
    StreamRef.from = from;
})(StreamRef = exports.StreamRef || (exports.StreamRef = {}));
//# sourceMappingURL=stream-ref.js.map